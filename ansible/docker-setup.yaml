---
- hosts: all 
  become: true
  vars:
    default_container_name: docker
    default_container_image: hello-world
  
  tasks:

    - name: Install required system packages
      apt:
        pkg:
          - ca-certificates
          - curl
          - gnupg
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true

    - name: "add proxy to install docker"
      shell: |
        echo >> /etc/apt/apt.conf "Acquire::http::Proxy "http://Proxy.Docker.ir:5555";"


    - name: "and shecan dns to resolv.conf"
      shell: |
        echo >> /etc/resolv.conf "nameserver 178.22.122.100"
        echo >> /etc/resolv.conf "nameserver 185.51.200.2"


    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: Install Docker Module for Python
      pip:
        name: docker
    
    # set docker mirror
    - lineinfile: dest=/etc/docker/daemon.json create=yes
                 line="{{ item }}"
      with_items:
        - '{"registry-mirrors": ["https://registry.docker.ir"]}'
    
    - name:  daemon-reload restart
      ansible.builtin.service:
        name:  daemon-reload
        state: restarted
        enabled: true
      
    - name:  restart docker
      ansible.builtin.service:
        name:  docker
        state: restarted
        enabled: true

    - name: Pull default Docker image
      community.docker.docker_image:
        name: "{{ default_container_image }}"
        source: pull

    - name: Create hello-world container
      community.docker.docker_container:
        name: "{{ default_container_name }}{{ item }}"
        image: "{{ default_container_image }}"
        state: present
    
    - name: "add user ro docker group"
      shell: |
        groupadd docker
        usermod -aG docker $USER
        newgrp docker
        chown "$USER":"$USER" /home/"$USER"/.docker -R
        chmod g+rwx "$HOME/.docker" -R

      
