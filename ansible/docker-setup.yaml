---
- hosts: all 
  become: true
  vars:
    default_container_name: docker
    default_container_image: hello-world
  
  tasks:

    - name: Install required system packages
      apt:
        pkg:
          - ca-certificates
          - curl
          - gnupg
        state: latest
        update_cache: true

    - name: "Add shecan dns to resolv.conf"
      shell: |
        sudo echo >> /etc/resolv.conf "nameserver 178.22.122.100"
        sudo echo >> /etc/resolv.conf "nameserver 185.51.200.2"

    - name: "Add Docker official GPG key:"
      shell: |
        sudo mkdir -m 0755 -p /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
              
    - name: "Set up a repository"
      shell: |
        "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
        "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
        sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        

    - name: "Update apt and install docker engine"
      shell: |
        sudo chmod a+r /etc/apt/keyrings/docker.gpg
        sudo apt-get update
        sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
    
    # set docker mirror
    - lineinfile: dest=/etc/docker/daemon.json create=yes
                 line="{{ item }}"
      with_items:
        - '{"registry-mirrors": ["https://registry.docker.ir"]}'
    
    - name:  daemon-reload restart
      ansible.builtin.service:
        name:  daemon-reload
        state: restarted
        enabled: true
      
    - name:  restart docker
      ansible.builtin.service:
        name:  docker
        state: restarted
        enabled: true
    
    - name: "Add user to docker group"
      shell: |
        groupadd docker
        usermod -aG docker $USER
        newgrp docker
        chown "$USER":"$USER" /home/"$USER"/.docker -R
        chmod g+rwx "$HOME/.docker" -R

    - name: Pull default Docker image
      community.docker.docker_image:
        name: "{{ default_container_image }}"
        source: pull

    - name: Create hello-world container
      community.docker.docker_container:
        name: "{{ default_container_name }}{{ item }}"
        image: "{{ default_container_image }}"
        state: present
    


      
